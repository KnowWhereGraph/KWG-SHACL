#### These are SHACL shapes for the SOSA ontology ####
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix sosa-shacl: <http://stko-kwg.geog.ucsb.ed/sosa-shacl/> .
@prefix time: <http://www.w3.org/2006/time#> .

### Shapes for class sosa:Observation 
sosa-shacl:ObservationConstraint
	a sh:NodeShape ;
	sh:targetClass sosa:Observation ;

	sh:property [
		sh:path sosa:madeBySensor ;
		sh:and (
			[
			rdfs:comment "An observation is made exactly one sensor."@en ;
		 	sh:maxCount 1 ;
		 	sh:minCount 1 ;
			]
			[
			rdfs:comment "An observation can only be made by instance of class sosa:Sensor."@en ;
		 	sh:class sosa:Sensor ;			
			]
        )
	] ;
	sh:property [
	 	sh:path sosa:usedProcedure  ;
	 	rdfs:comment "An observation can only use instance from class sosa:Procedure as the procedure."@en ;
		sh:class sosa:Procedure ;	
	] ;
	sh:property [
	 	sh:path sosa:hasFeatureOfInterst ;
	 	sh:and (
		 	[
		 	rdfs:comment "An observation is made for exactly one feature of interest."@en ;
		 	sh:maxCount 1 ; 
		 	sh:minCount 1 ;
		 	]
		 	[
		 	rdfs:comment "The feature of interest of an observation is from the class sosa:FeatureOfInterest."@en ; 
		 	sh:class sosa:FeatureOfInterest ;
		 	]
		) 
	] ;
	sh:property [
		sh:path sosa:observedProperty ;
		sh:and (
			[
			rdfs:comment "An observation is made for exactly one obervable property."@en ;
		 	sh:maxCount 1 ;
		 	sh:minCount 1 ; 
			]
			[
			rdfs:comment "An observable property belongs to the class sosa:ObservableProperty."@en ;
		 	sh:class sosa:ObservableProperty ;			
			]		
		) 
	] ;
	sh:property [
		sh:path ssn:wasOriginatedBy ;
		sh:and (
			[
			rdfs:comment "An observation is originated by exactly one instance."@en ;
		 	sh:maxCount 1 ;
		 	sh:minCount 1 ; 
			]
			[
			rdfs:comment "An observation should always be originated by instances of ssn:Stimulus."@en ;
		 	sh:class ssn:Stimulus ;			
			]		
		) 
	] ;
	sh:property [
	    rdfs:comment "An observation has to have either one phenomenonTime or one resultTime."@en ;
	    ### a missing constraint here is that if both phenomenonTime and resultTime exist, resultTime 
	    ### has to be later than phenomenon time  
		sh:or (
			[
			sh:path sosa:phenomenonTime ;
		 	sh:maxCount 1 ;
		 	sh:minCount 1 ;
		 	sh:class time:TemporalEntity ; 
			]
			[
			sh:path sosa:resultTime ;
			sh:maxCount 1 ;
			sh:minCount 1 ;
			sh:datatype xsd:dateTime ;
			] 		   
		) 
	] ;
	sh:property [
		rdfs:comment "An observation has to have at least one hasResult or hasSimpleResult, but not neither."@en ;
		sh:or (
			[
			sh:path sosa:hasResult ;
		 	sh:minCount 1 ;
		 	sh:class sosa:Result ; 
			]
			[
			sh:path sosa:hasSimpleResult ;
			sh:minCount 1 ;
			] 		   
		) 	
	] .